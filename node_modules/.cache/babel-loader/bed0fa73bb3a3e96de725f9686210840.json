{"ast":null,"code":"import _objectSpread from \"E:\\\\webstorm-projects\\\\projectrk101\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _this = this,\n  _jsxFileName = \"E:\\\\webstorm-projects\\\\projectrk101\\\\src\\\\index.js\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Line, Transformer, Rect } from \"react-konva\";\nimport App from \"./App\";\nvar Rectangle = function Rectangle(_ref) {\n  var shapeProps = _ref.shapeProps,\n    onSelect = _ref.onSelect,\n    onChange = _ref.onChange;\n  var shapeRef = React.useRef();\n  return /*#__PURE__*/React.createElement(Line, Object.assign({\n    onClick: function onClick() {\n      return onSelect(shapeRef);\n    },\n    onTap: function onTap() {\n      return onSelect(shapeRef);\n    }\n    // ref={shapeRef.current[getKey]}\n    ,\n    ref: shapeRef\n  }, shapeProps, {\n    name: \"rectangle\",\n    draggable: true,\n    closed: true,\n    onDragEnd: function onDragEnd(e) {\n      onChange(_objectSpread({}, shapeProps, {\n        x: e.target.x(),\n        y: e.target.y()\n      }));\n    },\n    onTransformEnd: function onTransformEnd() {\n      // // transformer is changing scale of the node\n      // // and NOT its width or height\n      // // but in the store we have only width and height\n      // // to match the data better we will reset scale on transform end\n      // const node = shapeRef.current;\n      // const scaleX = node.scaleX();\n      // const scaleY = node.scaleY();\n      //\n      // // we will reset it back\n      // node.scaleX(1);\n      // node.scaleY(1);\n      onChange(_objectSpread({}, shapeProps));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }));\n};\nrender( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 8\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"names":["React","render","Stage","Layer","Line","Transformer","Rect","App","Rectangle","shapeProps","onSelect","onChange","shapeRef","useRef","e","x","target","y","document","getElementById"],"sources":["E:/webstorm-projects/projectrk101/src/index.js"],"sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Line, Transformer,Rect } from \"react-konva\";\nimport App from \"./App\";\nconst Rectangle = ({ shapeProps, onSelect, onChange }) => {\n  const shapeRef = React.useRef();\n  return (\n    <Line\n      onClick={() => onSelect(shapeRef)}\n      onTap={() => onSelect(shapeRef)}\n      // ref={shapeRef.current[getKey]}\n      ref={shapeRef}\n      {...shapeProps}\n      name=\"rectangle\"\n      draggable\n      closed={true}\n      onDragEnd={(e) => {\n        onChange({\n          ...shapeProps,\n          x: e.target.x(),\n          y: e.target.y()\n        });\n      }}\n      onTransformEnd={() => {\n        // // transformer is changing scale of the node\n        // // and NOT its width or height\n        // // but in the store we have only width and height\n        // // to match the data better we will reset scale on transform end\n        // const node = shapeRef.current;\n        // const scaleX = node.scaleX();\n        // const scaleY = node.scaleY();\n        //\n        // // we will reset it back\n        // node.scaleX(1);\n        // node.scaleY(1);\n        onChange({\n          ...shapeProps,\n          // x: node.x(),\n          // y: node.y(),\n          // // set minimal value\n          // width: Math.max(5, node.width() * scaleX),\n          // height: Math.max(node.height() * scaleY)\n        });\n      }}\n    />\n  );\n};\n\n\n\n\n\nrender(<App />, document.getElementById(\"root\"));\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,WAAW;AAClC,SAASC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,WAAW,EAACC,IAAI,QAAQ,aAAa;AAClE,OAAOC,GAAG,MAAM,OAAO;AACvB,IAAMC,SAAS,GAAG,SAAZA,SAAS,OAA2C;EAAA,IAArCC,UAAU,QAAVA,UAAU;IAAEC,QAAQ,QAARA,QAAQ;IAAEC,QAAQ,QAARA,QAAQ;EACjD,IAAMC,QAAQ,GAAGZ,KAAK,CAACa,MAAM,EAAE;EAC/B,oBACE,oBAAC,IAAI;IACH,OAAO,EAAE;MAAA,OAAMH,QAAQ,CAACE,QAAQ,CAAC;IAAA,CAAC;IAClC,KAAK,EAAE;MAAA,OAAMF,QAAQ,CAACE,QAAQ,CAAC;IAAA;IAC/B;IAAA;IACA,GAAG,EAAEA;EAAS,GACVH,UAAU;IACd,IAAI,EAAC,WAAW;IAChB,SAAS;IACT,MAAM,EAAE,IAAK;IACb,SAAS,EAAE,mBAACK,CAAC,EAAK;MAChBH,QAAQ,mBACHF,UAAU;QACbM,CAAC,EAAED,CAAC,CAACE,MAAM,CAACD,CAAC,EAAE;QACfE,CAAC,EAAEH,CAAC,CAACE,MAAM,CAACC,CAAC;MAAE,GACf;IACJ,CAAE;IACF,cAAc,EAAE,0BAAM;MACpB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAN,QAAQ,mBACHF,UAAU,EAMb;IACJ,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACF;AAEN,CAAC;AAMDR,MAAM,eAAC,oBAAC,GAAG;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EAAG,EAAEiB,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC"},"metadata":{},"sourceType":"module"}